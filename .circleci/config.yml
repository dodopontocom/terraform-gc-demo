version: 2.1
  
defaults: &defaults
  environment:
    TF_VAR_gcp_bucket: "gcp-laboratories-tf-state"
    TERRAFORM_STR: "terraform"
    TF_VAR_project_id: "gcp-laboratories"
    TF_VAR_region: "us-central1"
    TF_VAR_key: "/root/terraform-gcp-lab/credentials/credential.json"
    TF_VAR_start_topic: "start-instance-event"
    TF_VAR_stop_topic: "stop-instance-event"
    TF_VAR_start_function_name: "startInstancePubSub"
    TF_VAR_stop_function_name: "stopInstancePubSub"
    TF_VAR_function_zip_name: "index.zip"
    TF_VAR_function_zip_source_file: "/root/terraform-gcp-lab/gcp-functions/index.zip"
    TF_VAR_schedule_stop: "stop-job"
    TF_VAR_schedule_start: "start-job"
    TF_VAR_machine_type: "f1-micro"
    TF_VAR_zone: "us-central1-a"
    TF_VAR_compute_instance_environment: "dev"
    TF_VAR_ubuntu_image: "ubuntu-os-cloud/ubuntu-1804-lts"
  working_directory: /root/terraform-gcp-lab
only-releasable: &only-releasable
  filters:
    branches:
      only:
        - master
        - develop
        - patch
        - feature/devops
non-releasable: &non-releasable
  filters:
    branches:
      ignore:
        - master
        - develop
        - patch
gcp-bucket-checker-template: &gcp-bucket-checker-template
  docker:
    - image: google/cloud-sdk
  steps:
    - checkout
    - run:
        name: "Export terraform variables"
        command: cat .circleci/tf-definitions.sh >> $BASH_ENV | source $BASH_ENV
    - run:
        name: "Validate tf state bucket "
        command: |
          echo ${GCP_SA} > ${TF_VAR_key}
          gcloud auth activate-service-account --key-file=${TF_VAR_key}
          gcloud config set project ${TF_VAR_project_id}
          echo "Checking if GCP Bucket is created..."
          gsutil ls gs://${TF_VAR_gcp_bucket}/
          echo "Bucket step passed!"
create-function-zip-template: &create-function-zip-template
  machine: true
  steps:
    - checkout
    - run:
        name: "Create and provide nodejs functions zip"
        command: |
          cd nodejs-functions/scheduleinstance/
          zip ../../gcp-functions/index.zip *
          cd -
    - persist_to_workspace:
        root: gcp-functions/
        paths:
          - index.zip
terraform-template: &terraform-template
  docker:
    - image: hashicorp/terraform:light
  steps:
    - checkout
    - attach_workspace:
        at: gcp-functions/
    - run:
        name: "Terraform provisioning"
        command: |
          echo ${GCP_SA} > ${TF_VAR_key}
          export GOOGLE_APPLICATION_CREDENTIALS=${TF_VAR_key}
          cd ${TERRAFORM_STR}
          if [[ $(git log --format=oneline -n 1 ${CIRCLE_SHA1} | grep -Eo "\[custom-command\]") ]]; then
            echo "Attention, custom command flag detected!"
            terraform init -backend-config="bucket=${TF_VAR_gcp_bucket}" -backend-config="prefix=${TERRAFORM_STR}"
            echo "======== Validating the command ========"
            $(git log --format=oneline -n 1 ${CIRCLE_SHA1} | cut -d'|' -f2-)
          elif [[ $(git log --format=oneline -n 1 ${CIRCLE_SHA1} | grep -Eo "\[tf-destroy\]") ]]; then
            echo "Attention, destroy flag detected!"
            terraform init -backend-config="bucket=${TF_VAR_gcp_bucket}" -backend-config="prefix=${TERRAFORM_STR}"
            echo "======== Destroying GCP Resources ========"
            terraform destroy --auto-approve
          else
            echo "Standard Deploy"
            TERRAFORM_APP_ENGINE_FILE=./scheduler.tf
            APP_ENGINE_RESOURCE_NAME=$(cat ${TERRAFORM_APP_ENGINE_FILE} | grep -m 1 resource | awk '{gsub("\"",""); print $2 "." $3}')
            terraform init -backend-config="bucket=${TF_VAR_gcp_bucket}" -backend-config="prefix=${TERRAFORM_STR}"
            terraform import ${APP_ENGINE_RESOURCE_NAME} ${TF_VAR_project_id} || true
            terraform plan
            terraform apply --auto-approve
          fi
jobs:
  tf_state_checker:
    <<: *defaults
    <<: *gcp-bucket-checker-template
  create_zip_file:
    <<: *create-function-zip-template
  tf_provisioning:
    <<: *defaults
    <<: *terraform-template

workflows:
  version: 2.1
  GCP_LABS:
    jobs:
      - tf_state_checker:
          <<: *only-releasable
      - create_zip_file:
          <<: *only-releasable
          requires:
            - tf_state_checker
      - tf_provisioning:
          <<: *only-releasable
          requires:
            - create_zip_file
